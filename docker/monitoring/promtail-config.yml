server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker 컨테이너 로그 수집
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      # 컨테이너 이름을 라벨로 추가
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      
      # 컨테이너 ID를 라벨로 추가
      - source_labels: ['__meta_docker_container_id']
        target_label: 'container_id'
      
      # 컨테이너 레이블을 추가
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      
      # 로그 경로 설정
      - source_labels: ['__meta_docker_container_id']
        target_label: '__path__'
        replacement: '/var/lib/docker/containers/$1/*-json.log'
    
    # 로그 파싱: JSON 형식의 Docker 로그
    pipeline_stages:
      # Docker JSON 로그 파싱
      - docker: {}
      
      # 로그 레벨 추출 (Spring Boot 로그 형식)
      - regex:
          expression: '^.*(?P<level>(ERROR|WARN|INFO|DEBUG|TRACE)).*$'
      
      - labels:
          level:
      
      # 타임스탬프 추출
      - timestamp:
          source: timestamp
          format: RFC3339Nano

