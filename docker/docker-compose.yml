version: '3.8'

services:
  # ===========================================
  # 마이크로서비스들
  # (DB는 Ubuntu 호스트에서 직접 실행: 10.0.2.15)
  # ===========================================
  
  user-service:
    build:
      context: ../backend/user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      - SERVER_PORT=8081
      - DB_HOST=10.0.2.15
      - DB_PORT=3306
      - DB_NAME=user_service
      - DB_USERNAME=root
      - DB_PASSWORD=password
    networks:
      - maltan-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3

  place-service:
    build:
      context: ../backend/place-service
      dockerfile: Dockerfile
    container_name: place-service
    ports:
      - "8082:8082"
    environment:
      - SERVER_PORT=8082
      - DB_HOST=10.0.2.15
      - DB_PORT=3306
      - DB_NAME=placedb
      - DB_USERNAME=root
      - DB_PASSWORD=1234
      - UPLOAD_DIR=/app/uploads
    networks:
      - maltan-network
    restart: unless-stopped
    volumes:
      - place_uploads:/app/uploads
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  community-service:
    build:
      context: ../backend/community-service
      dockerfile: Dockerfile
    container_name: community-service
    ports:
      - "8083:8083"
    environment:
      - SERVER_PORT=8083
      - DB_HOST=10.0.2.15
      - DB_PORT=5432
      - DB_NAME=community_db
      - DB_USERNAME=community_user
      - DB_PASSWORD=Community@2025!
      - REDIS_HOST=10.0.2.15
      - REDIS_PORT=6379
      - USER_SERVICE_URL=http://10.0.2.15:8081
    networks:
      - maltan-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  recommendation-service:
    build:
      context: ../backend/recommendation-service
      dockerfile: Dockerfile
    container_name: recommendation-service
    ports:
      - "8084:8084"
    environment:
      - SERVER_PORT=8084
      - DB_HOST=10.0.2.15
      - DB_PORT=5432
      - DB_NAME=recommendation_db
      - DB_USERNAME=recommendation_user
      - DB_PASSWORD=Recommendation2025
      - PLACE_SERVICE_URL=http://10.0.2.15:8082
    networks:
      - maltan-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8084/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # 모니터링 스택 (Prometheus + Grafana)
  # ===========================================
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - maltan-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"  # 3000은 프론트엔드가 사용 중이므로 3001로 변경
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - maltan-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  gateway-service:
    build:
      context: ../backend/gateway-service
      dockerfile: Dockerfile
    container_name: gateway-service
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - REDIS_HOST=10.0.2.15
      - REDIS_PORT=6379
      - USER_SERVICE_URL=http://user-service:8081
      - PLACE_SERVICE_URL=http://place-service:8082
      - RECOMMENDATION_SERVICE_URL=http://recommendation-service:8083
      - COMMUNITY_SERVICE_URL=http://community-service:8084
    depends_on:
      - user-service
      - place-service
      - recommendation-service
      - community-service
    networks:
      - maltan-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# ===========================================
# 네트워크 및 볼륨
# ===========================================
networks:
  maltan-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16

volumes:
  place_uploads:
  prometheus_data:
  grafana_data:
