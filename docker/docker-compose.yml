version: '3.8'

services:
  # ===========================================
  # 데이터베이스 서비스
  # ===========================================
  postgres:
    image: postgres:15-alpine
    container_name: maltan-postgres
    environment:
      POSTGRES_DB: maltan_db
      POSTGRES_USER: maltan_user
      POSTGRES_PASSWORD: maltan_pass123
      POSTGRES_MULTIPLE_DATABASES: user_db,place_db,recommendation_db,community_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - maltan-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U maltan_user -d maltan_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: maltan-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - maltan-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ===========================================
  # 마이크로서비스들
  # ===========================================
  user-service:
    build:
      context: ../backend/user-service
      dockerfile: Dockerfile
    container_name: maltan-user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8081
      - DATABASE_URL=jdbc:postgresql://postgres:5432/user_db
      - DATABASE_USERNAME=maltan_user
      - DATABASE_PASSWORD=maltan_pass123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=maltan-jwt-secret-key-2024
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - maltan-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  place-service:
    build:
      context: ../backend/place-service
      dockerfile: Dockerfile
    container_name: maltan-place-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8082
      - DATABASE_URL=jdbc:postgresql://postgres:5432/place_db
      - DATABASE_USERNAME=maltan_user
      - DATABASE_PASSWORD=maltan_pass123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAKAO_MAP_API_KEY=${KAKAO_MAP_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - maltan-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  recommendation-service:
    build:
      context: ../backend/recommendation-service
      dockerfile: Dockerfile
    container_name: maltan-recommendation-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8083
      - DATABASE_URL=jdbc:postgresql://postgres:5432/recommendation_db
      - DATABASE_USERNAME=maltan_user
      - DATABASE_PASSWORD=maltan_pass123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - USER_SERVICE_URL=http://user-service:8081
      - PLACE_SERVICE_URL=http://place-service:8082
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      user-service:
        condition: service_healthy
      place-service:
        condition: service_healthy
    networks:
      - maltan-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  community-service:
    build:
      context: ../backend/community-service
      dockerfile: Dockerfile
    container_name: maltan-community-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8084
      - DATABASE_URL=jdbc:postgresql://postgres:5432/community_db
      - DATABASE_USERNAME=maltan_user
      - DATABASE_PASSWORD=maltan_pass123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - USER_SERVICE_URL=http://user-service:8081
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      user-service:
        condition: service_healthy
    networks:
      - maltan-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  gateway-service:
    build:
      context: ../backend/gateway-service
      dockerfile: Dockerfile
    container_name: maltan-gateway-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - USER_SERVICE_URL=http://user-service:8081
      - PLACE_SERVICE_URL=http://place-service:8082
      - RECOMMENDATION_SERVICE_URL=http://recommendation-service:8083
      - COMMUNITY_SERVICE_URL=http://community-service:8084
    depends_on:
      redis:
        condition: service_healthy
      user-service:
        condition: service_healthy
      place-service:
        condition: service_healthy
      recommendation-service:
        condition: service_healthy
      community-service:
        condition: service_healthy
    networks:
      - maltan-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # 프론트엔드
  # ===========================================
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: maltan-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8080
      - REACT_APP_KAKAO_MAP_API_KEY=${KAKAO_MAP_API_KEY}
    depends_on:
      - gateway-service
    networks:
      - maltan-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.1'

  # ===========================================
  # 모니터링 (선택사항)
  # ===========================================
  prometheus:
    image: prom/prometheus:latest
    container_name: maltan-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - maltan-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.1'

  grafana:
    image: grafana/grafana:latest
    container_name: maltan-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - maltan-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.1'

# ===========================================
# 네트워크 및 볼륨
# ===========================================
networks:
  maltan-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
  redis_data:
  grafana_data:
